{
	// Place your snippets for racket here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }

	"Header": {
		"prefix": "header",
		"body": [
			";;",
			";; ╭─────────────────────────╮",
			";; │ Paul Virally ($1) │",
			";; │ CS 115 Fall 2018        │",
			";; │ Assignment ${2:0}, Problem ${3:1} │",
			";; ╰─────────────────────────╯",
			";; ",
			"",
			"",
			"$0"
		]
	},

	"Testing": {
		"prefix": "testing",
		"body": [
			"#lang htdp/isl",
			"(require test-engine/racket-tests)",
			"(test) ; Place at the end of the file"
		]
	},

	"define": {
		"prefix": "def",
		"body": [
			";; (${1:func-name} ${2:params}) consumes ${2:params} to produce ...)",
			";;",
			";; ${1:func-name}: ${2:params} -> something",
			";;",
			";; Examples:",
			"(check-expect (${1:func-name} example-params) exmaple-solution)",
			"(check-expect (${1:func-name} example-params) exmaple-solution)",
			"",
			";; Definition",
			"(define (${1:func-name} ${2:params})",
			"\t($0))",
		]
	}
}